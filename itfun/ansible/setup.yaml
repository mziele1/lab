- name: User Setup
  hosts: itfun
  vars:
    n_users: 4
    users: "{{ ['user'] | product(range(1, n_users + 1)) | map('join') | list }}"
  tasks:
  - name: Add Users
    ansible.builtin.user:
      name: "{{ item }}"
      password: "*"
      shell: /bin/bash
    loop: "{{ users }}"
    become: true
    register: user_return_values
  - name: Create .ssh Directory
    ansible.builtin.file:
      path: "/home/{{ item }}/.ssh"
      state: "directory"
      owner: "{{ item }}"
      group: "{{ item }}"
      mode: "700"
    loop: "{{ users }}"
    become: true
  - name: Create Keys
    community.crypto.openssh_keypair:
      path: "/home/{{ item }}/.ssh/id_ssh_ed25519"
      type: "ed25519"
      regenerate: "full_idempotence"
      owner: "{{ item }}"
      group: "{{ item }}"
    loop: "{{ users }}"
    become: true
    register: openssh_keypair_return_values
  - name: Configure authorized_keys
    ansible.builtin.lineinfile:
      path: "/home/{{ item.item }}/.ssh/authorized_keys"
      line: "{{ item.public_key }}"
      create: true
      owner: "{{ item.item }}"
      group: "{{ item.item }}"
      mode: "600"
    loop: "{{ openssh_keypair_return_values.results }}"
    become: true
  - name: Get User Docker Service File Status
    ansible.builtin.stat:
      path: "/home/{{ item }}/.config/systemd/user/docker.service"
    loop: "{{ users }}"
    become: true
    register: docker_service_stat_return_values
  - name: Rootless Docker Install
    ansible.builtin.shell: /usr/bin/dockerd-rootless-setuptool.sh install
    loop: "{{ docker_service_stat_return_values.results }}"
    become: true
    become_user: "{{ item.item }}"
    become_method: machinectl
    become_exe: sudo machinectl
    when: item.stat.exists == false
  - name: Rootless Docker .bashrc Block
    ansible.builtin.blockinfile:
      path: "/home/{{ item.item }}/.bashrc"
      block: |
        export PATH=/usr/bin:$PATH
        export "DOCKER_HOST=unix:///run/user/{{ item.uid }}/docker.sock"
      owner: "{{ item.item }}"
      group: "{{ item.item }}"
    loop: "{{ user_return_values.results }}"
    become: true
  - name: Stat conda Installation
    ansible.builtin.stat:
      path: "/opt/miniforge"
    register: conda_stat
  - name: Install conda
    ansible.builtin.shell: |
      wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O ~/miniforge.sh
      bash ~/miniforge.sh -b -p /opt/miniforge
      source /opt/miniforge/bin/activate
      conda init --all
      conda install scikit-learn jupyterlab matplotlib pandas numpy psycopg -y
      rm ~/miniforge.sh
    become: true
    when: conda_stat.stat.exists == false
  - name: Get User conda Init Status
    ansible.builtin.lineinfile:
      path: "/home/{{ item }}/.bashrc"
      line: "# !! Contents within this block are managed by 'conda init' !!"
    check_mode: true
    loop: "{{ users }}"
    become: true
    register: user_conda_init_status
  - name: User conda Init
    ansible.builtin.shell: |
      source /opt/miniforge/bin/activate
      conda init
    args:
      executable: /bin/bash
    loop: "{{ user_conda_init_status.results }}"
    become: true
    become_user: "{{ item.item }}"
    when: item.changed == true
